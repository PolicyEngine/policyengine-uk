{"version":2,"kind":"Article","sha256":"ed3f765bb52dd5015e4cb7009a956c97c7ed662e6dcca9e502f5db58b0cbac71","slug":"scenarios","location":"/usage/scenarios.md","dependencies":[],"frontmatter":{"title":"Creating policy scenarios","content_includes_title":false,"authors":[{"nameParsed":{"literal":"PolicyEngine","family":"PolicyEngine"},"name":"PolicyEngine","id":"contributors-myst-generated-uid-0"}],"github":"https://github.com/policyengine/policyengine-uk","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/policyengine/policyengine-uk/blob/master/docs/book/usage/scenarios.md","exports":[{"format":"md","filename":"scenarios.md","url":"/build/scenarios-1cd6da8cd4c8288be0260022c1fb89cb.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ievjoaVsPc"},{"type":"inlineCode","value":"Scenario","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FXrHz3o9pR"},{"type":"text","value":" class lets you define policy reforms and apply them to simulations. This guide shows you how to create everything from simple parameter changes to complex reform packages, and how to combine different policy ideas together.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Wy9KxzQGrs"}],"key":"ukTHI4nmFj"},{"type":"heading","depth":2,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Your first policy scenario","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fdsASDxA9h"}],"identifier":"your-first-policy-scenario","label":"Your first policy scenario","html_id":"your-first-policy-scenario","implicit":true,"key":"B6PVC2zI3B"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Let’s start by creating a scenario that reduces the basic rate of income tax from 20% to 15%:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"FqFPWuky9h"}],"key":"a1vEzkrayc"},{"type":"code","lang":"python","value":"from policyengine_uk import Scenario, Simulation\n\n# Create a scenario with one policy change\nscenario = Scenario(parameter_changes={\n    \"gov.hmrc.income_tax.rates.uk[0].rate\": 0.15\n})\n\n# Apply it to a simulation\nsituation = {\n    \"people\": {\n        \"person\": {\n            \"age\": {2025: 35},\n            \"employment_income\": {2025: 40_000}\n        }\n    },\n    \"benunits\": {\"benunit\": {\"members\": [\"person\"]}},\n    \"households\": {\"household\": {\"members\": [\"person\"]}}\n}\n\nsim = Simulation(situation=situation, scenario=scenario)\nincome_tax = sim.calculate(\"income_tax\", 2025).mean()\nprint(f\"Income tax under 15% basic rate: £{income_tax:.2f}\")","position":{"start":{"line":9,"column":1},"end":{"line":32,"column":1}},"key":"szcxYx6WNf"},{"type":"paragraph","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"Under this scenario, this person would pay £2,486 instead of the current £4,486 - a reduction of £2,000 per year due to the lower tax rate.","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"sXdTXu5lHO"}],"key":"XNAxw6j06g"},{"type":"heading","depth":2,"position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"Understanding parameter paths","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"d24VvRWGzn"}],"identifier":"understanding-parameter-paths","label":"Understanding parameter paths","html_id":"understanding-parameter-paths","implicit":true,"key":"XJ8WTq5soV"},{"type":"paragraph","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"PolicyEngine UK organises policy parameters in a hierarchical structure. Each parameter has a path that describes where it sits in the system:","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"HIGooVQaXS"}],"key":"IP815Ct1NZ"},{"type":"code","lang":"python","value":"# Income tax parameters\n\"gov.hmrc.income_tax.rates.uk[0].rate\"          # Basic rate (20%)\n\"gov.hmrc.income_tax.rates.uk[1].rate\"          # Higher rate (40%)\n\"gov.hmrc.income_tax.personal_allowance\"        # Personal allowance\n\"gov.hmrc.income_tax.rates.uk[0].threshold\"     # Basic rate threshold\n\n# Universal Credit parameters\n\"gov.dwp.universal_credit.standard_allowance.single.OVER_25\"     # Single person allowance\n\"gov.dwp.universal_credit.elements.housing.max_monthly_cap\"      # Housing cost cap\n\"gov.dwp.universal_credit.means_test.income_disregard\"           # Work allowance\n\n# Child benefits\n\"gov.hmrc.child_benefit.rates.first_child\"      # First child rate\n\"gov.hmrc.child_benefit.rates.additional_child\" # Additional children rate","position":{"start":{"line":40,"column":1},"end":{"line":55,"column":1}},"key":"jVyT2Ih2b3"},{"type":"paragraph","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"children":[{"type":"text","value":"You can find parameter paths by exploring the PolicyEngine web app or looking in the ","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"P0dKF7SRxO"},{"type":"inlineCode","value":"parameters/","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"DpQxyvvNax"},{"type":"text","value":" directory of the codebase.","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"LGqfdcMe7u"}],"key":"tAWfDkqD02"},{"type":"heading","depth":2,"position":{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},"children":[{"type":"text","value":"Creating comprehensive reform packages","position":{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},"key":"N00jAcRMxz"}],"identifier":"creating-comprehensive-reform-packages","label":"Creating comprehensive reform packages","html_id":"creating-comprehensive-reform-packages","implicit":true,"key":"I0lPrIINHr"},{"type":"paragraph","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"Real policy proposals often involve multiple changes. Here’s how to create a comprehensive reform:","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"UYlFbSumVO"}],"key":"K1ZsZPoVy8"},{"type":"code","lang":"python","value":"# A comprehensive package that increases Universal Credit support while adjusting income tax\n# This represents the kind of coordinated policy change you might see in a budget\nwelfare_reform = Scenario(parameter_changes={\n    # Increase UC standard allowances\n    \"gov.dwp.universal_credit.standard_allowance.single.OVER_25\": 500,\n    \"gov.dwp.universal_credit.standard_allowance.single.UNDER_25\": 400,\n    \"gov.dwp.universal_credit.standard_allowance.couple\": 700,\n    \n    # Reduce UC taper rate (less benefit withdrawn per pound earned)\n    \"gov.dwp.universal_credit.means_test.reduction_rate\": 0.55,\n    \n    # Increase income tax personal allowance\n    \"gov.hmrc.income_tax.personal_allowance\": 15_000,\n    \n    # Reduce basic rate slightly to help fund UC increases\n    \"gov.hmrc.income_tax.rates.uk[0].rate\": 0.22\n})\n\n# Test on a working family\nfamily_situation = {\n    \"people\": {\n        \"parent\": {\"age\": {2025: 30}, \"employment_income\": {2025: 20_000}},\n        \"child\": {\"age\": {2025: 5}}\n    },\n    \"benunits\": {\"family\": {\"members\": [\"parent\", \"child\"]}},\n    \"households\": {\n        \"home\": {\n            \"members\": [\"parent\", \"child\"],\n            \"housing_costs\": {2025: 7200}  # Annual housing costs\n        }\n    }\n}\n\nreformed_sim = Simulation(situation=family_situation, scenario=welfare_reform)\n\n# Calculate the impact of this comprehensive package on the family\nuc_amount = reformed_sim.calculate(\"universal_credit\", 2025).mean()\nincome_tax = reformed_sim.calculate(\"income_tax\", 2025).mean()\nnet_income = reformed_sim.calculate(\"household_net_income\", 2025).mean()\n\nprint(f\"Universal Credit: £{uc_amount:.2f} per month\")\nprint(f\"Income tax: £{income_tax:.2f} per year\")\nprint(f\"Monthly net income: £{net_income/12:.2f}\")","position":{"start":{"line":63,"column":1},"end":{"line":107,"column":1}},"key":"xpbd8FDDNo"},{"type":"heading","depth":2,"position":{"start":{"line":109,"column":1},"end":{"line":109,"column":1}},"children":[{"type":"text","value":"Combining scenarios","position":{"start":{"line":109,"column":1},"end":{"line":109,"column":1}},"key":"k3ynr9YjAY"}],"identifier":"combining-scenarios","label":"Combining scenarios","html_id":"combining-scenarios","implicit":true,"key":"LCksQWG6fU"},{"type":"paragraph","position":{"start":{"line":111,"column":1},"end":{"line":111,"column":1}},"children":[{"type":"text","value":"You can combine different scenarios using the ","position":{"start":{"line":111,"column":1},"end":{"line":111,"column":1}},"key":"HIlNM7KfHJ"},{"type":"inlineCode","value":"+","position":{"start":{"line":111,"column":1},"end":{"line":111,"column":1}},"key":"jkZK1KFyvT"},{"type":"text","value":" operator, which is useful for testing different combinations of policies:","position":{"start":{"line":111,"column":1},"end":{"line":111,"column":1}},"key":"r49JhcY0ap"}],"key":"vMIndvccn0"},{"type":"code","lang":"python","value":"# Create separate scenarios for different policy areas\ntax_scenario = Scenario(parameter_changes={\n    \"gov.hmrc.income_tax.personal_allowance\": 15_000,\n    \"gov.hmrc.income_tax.rates.uk[0].rate\": 0.18\n})\n\nbenefits_scenario = Scenario(parameter_changes={\n    \"gov.dwp.universal_credit.standard_allowance.single.OVER_25\": 450,\n    \"gov.dwp.universal_credit.means_test.reduction_rate\": 0.50\n})\n\nchildcare_scenario = Scenario(parameter_changes={\n    \"gov.dwp.universal_credit.elements.childcare.max_proportion\": 0.90\n})\n\n# Combine them in different ways\ntax_and_benefits = tax_scenario + benefits_scenario\nfull_package = tax_scenario + benefits_scenario + childcare_scenario\n\n# Test each combination to see how different policy areas interact\n# This shows how you can build up complex policies piece by piece\nfor name, scenario in [(\"Tax only\", tax_scenario), (\"Benefits only\", benefits_scenario), \n                      (\"Tax + benefits\", tax_and_benefits), (\"Full package\", full_package)]:\n    sim = Simulation(situation=family_situation, scenario=scenario)\n    net_income = sim.calculate(\"household_net_income\", 2025).mean()\n    print(f\"{name}: £{net_income/12:.2f} per month\")","position":{"start":{"line":113,"column":1},"end":{"line":140,"column":1}},"key":"FapsFxC4PR"},{"type":"heading","depth":2,"position":{"start":{"line":142,"column":1},"end":{"line":142,"column":1}},"children":[{"type":"text","value":"Defining structural scenarios","position":{"start":{"line":142,"column":1},"end":{"line":142,"column":1}},"key":"mB11Xe1kqS"}],"identifier":"defining-structural-scenarios","label":"Defining structural scenarios","html_id":"defining-structural-scenarios","implicit":true,"key":"DTRjJT8AYX"},{"type":"paragraph","position":{"start":{"line":144,"column":1},"end":{"line":144,"column":1}},"children":[{"type":"text","value":"Beyond simple parameter changes, you sometimes need scenarios that make structural modifications to how the tax-benefit system works. Let’s walk through how to create these, using examples similar to those in PolicyEngine UK’s scenarios module.","position":{"start":{"line":144,"column":1},"end":{"line":144,"column":1}},"key":"zFjBXUWSRf"}],"key":"dc2Xc6Hqnh"},{"type":"heading","depth":3,"position":{"start":{"line":146,"column":1},"end":{"line":146,"column":1}},"children":[{"type":"text","value":"Creating a two-child limit repeal scenario","position":{"start":{"line":146,"column":1},"end":{"line":146,"column":1}},"key":"gwrzKjgj5Z"}],"identifier":"creating-a-two-child-limit-repeal-scenario","label":"Creating a two-child limit repeal scenario","html_id":"creating-a-two-child-limit-repeal-scenario","implicit":true,"key":"rdHXKsMrNp"},{"type":"paragraph","position":{"start":{"line":148,"column":1},"end":{"line":148,"column":1}},"children":[{"type":"text","value":"The two-child limit restricts Universal Credit child elements to the first two children. Here’s how to build a scenario that removes this restriction:","position":{"start":{"line":148,"column":1},"end":{"line":148,"column":1}},"key":"wFe3fHEOSl"}],"key":"H49Tm1gDIT"},{"type":"code","lang":"python","value":"import numpy as np\nfrom policyengine_uk import Scenario\n\n# The two-child limit is controlled by this parameter\n# Setting it to infinity effectively removes the limit\nrepeal_two_child_limit = Scenario(parameter_changes={\n    \"gov.dwp.universal_credit.elements.child.limit.child_count\": {\n        \"year:2026:10\": np.inf  # From October 2026 onwards, no limit\n    }\n})\n\n# Test this on a family with three children\nlarge_family = {\n    \"people\": {\n        \"parent\": {\"age\": {2026: 35}, \"employment_income\": {2026: 18_000}},\n        \"child1\": {\"age\": {2026: 12}},\n        \"child2\": {\"age\": {2026: 8}},\n        \"child3\": {\"age\": {2026: 4}}  # Third child - currently gets no UC support\n    },\n    \"benunits\": {\"family\": {\"members\": [\"parent\", \"child1\", \"child2\", \"child3\"]}},\n    \"households\": {\n        \"home\": {\n            \"members\": [\"parent\", \"child1\", \"child2\", \"child3\"],\n            \"housing_costs\": {2026: 10200}  # Annual housing costs\n        }\n    }\n}\n\n# Compare the impact\nbaseline_sim = Simulation(situation=large_family)\nreformed_sim = Simulation(situation=large_family, scenario=repeal_two_child_limit)\n\nbaseline_uc = baseline_sim.calculate(\"universal_credit\", 2026).mean()\nreformed_uc = reformed_sim.calculate(\"universal_credit\", 2026).mean()\n\nincrease = reformed_uc - baseline_uc\nprint(f\"UC increase from third child: £{increase:.2f} per month\")","position":{"start":{"line":150,"column":1},"end":{"line":188,"column":1}},"key":"sLLL8crD8z"},{"type":"heading","depth":3,"position":{"start":{"line":190,"column":1},"end":{"line":190,"column":1}},"children":[{"type":"text","value":"Building a benefit cap reindexing scenario","position":{"start":{"line":190,"column":1},"end":{"line":190,"column":1}},"key":"KdAIH8YqN0"}],"identifier":"building-a-benefit-cap-reindexing-scenario","label":"Building a benefit cap reindexing scenario","html_id":"building-a-benefit-cap-reindexing-scenario","implicit":true,"key":"lueCQK1gJZ"},{"type":"paragraph","position":{"start":{"line":192,"column":1},"end":{"line":192,"column":1}},"children":[{"type":"text","value":"The benefit cap hasn’t risen with inflation since 2016. Here’s how to create a scenario that automatically indexes it to CPI:","position":{"start":{"line":192,"column":1},"end":{"line":192,"column":1}},"key":"YLvVBoyxEJ"}],"key":"iNym41XCx7"},{"type":"code","lang":"python","value":"from policyengine_uk import Scenario, Simulation\nfrom policyengine_core.parameters import Parameter\n\ndef reindex_benefit_cap_to_cpi(simulation: Simulation):\n    \"\"\"Modify simulation to index benefit cap parameters to CPI inflation\"\"\"\n    # Reset the parameter system to make changes\n    simulation.tax_benefit_system.reset_parameters()\n    \n    # Find all benefit cap parameters in the system\n    params = simulation.tax_benefit_system.parameters.gov.dwp.benefit_cap.get_descendants()\n    \n    # Filter to only the actual parameter values (leaf nodes)\n    cap_parameters = [param for param in params if isinstance(param, Parameter)]\n    \n    for parameter in cap_parameters:\n        # Remove any values after 2025 (current frozen values)\n        parameter.values_list = [\n            entry for entry in parameter.values_list \n            if entry.instant_str < \"2026-01-01\"\n        ]\n        \n        # Set the parameter to follow CPI uprating from 2026\n        parameter.metadata.update(uprating=\"gov.benefit_uprating_cpi\")\n    \n    # Reprocess the parameters to apply changes\n    simulation.tax_benefit_system.process_parameters()\n\n# Create the scenario using a simulation modifier\nreindex_benefit_cap = Scenario(simulation_modifier=reindex_benefit_cap_to_cpi)\n\n# Test on a family that might hit the benefit cap\nbenefit_cap_family = {\n    \"people\": {\n        \"parent1\": {\"age\": {2026: 30}, \"employment_income\": {2026: 0}},\n        \"parent2\": {\"age\": {2026: 28}, \"employment_income\": {2026: 0}},\n        \"child1\": {\"age\": {2026: 6}},\n        \"child2\": {\"age\": {2026: 3}}\n    },\n    \"benunits\": {\"family\": {\"members\": [\"parent1\", \"parent2\", \"child1\", \"child2\"]}},\n    \"households\": {\n        \"home\": {\n            \"members\": [\"parent1\", \"parent2\", \"child1\", \"child2\"],\n            \"housing_costs\": {2026: 14400}  # High annual housing costs\n        }\n    }\n}\n\nbaseline_sim = Simulation(situation=benefit_cap_family)\nreformed_sim = Simulation(situation=benefit_cap_family, scenario=reindex_benefit_cap)\n\n# Compare the benefit cap levels\nbaseline_cap = baseline_sim.calculate(\"benefit_cap\", 2026).mean()\nreformed_cap = reformed_sim.calculate(\"benefit_cap\", 2026).mean()\n\nprint(f\"Benefit cap - frozen: £{baseline_cap:.0f}/year, indexed: £{reformed_cap:.0f}/year\")","position":{"start":{"line":194,"column":1},"end":{"line":250,"column":1}},"key":"nxQGBg1IVf"},{"type":"heading","depth":2,"position":{"start":{"line":252,"column":1},"end":{"line":252,"column":1}},"children":[{"type":"text","value":"Advanced scenario techniques","position":{"start":{"line":252,"column":1},"end":{"line":252,"column":1}},"key":"AuSNex2Tnm"}],"identifier":"advanced-scenario-techniques","label":"Advanced scenario techniques","html_id":"advanced-scenario-techniques","implicit":true,"key":"kjTlFcd0QQ"},{"type":"heading","depth":3,"position":{"start":{"line":254,"column":1},"end":{"line":254,"column":1}},"children":[{"type":"text","value":"Time-varying parameters","position":{"start":{"line":254,"column":1},"end":{"line":254,"column":1}},"key":"j1Gwvepnsc"}],"identifier":"time-varying-parameters","label":"Time-varying parameters","html_id":"time-varying-parameters","implicit":true,"key":"IIOqFFrqLO"},{"type":"paragraph","position":{"start":{"line":256,"column":1},"end":{"line":256,"column":1}},"children":[{"type":"text","value":"Some reforms phase in over time:","position":{"start":{"line":256,"column":1},"end":{"line":256,"column":1}},"key":"nVzoWKW9cp"}],"key":"kSvyVd0TJ1"},{"type":"code","lang":"python","value":"# A scenario that gradually increases the personal allowance over four years\n# This kind of phasing helps manage fiscal costs and economic adjustment\nphased_scenario = Scenario(parameter_changes={\n    \"gov.hmrc.income_tax.personal_allowance\": {\n        \"2025\": 13_000,\n        \"2026\": 14_000,\n        \"2027\": 15_000,\n        \"2028\": 16_000\n    }\n})\n\n# Test this on a middle-income earner to see the progressive impact\nsituation = {\n    \"people\": {\"person\": {\"age\": {2025: 30}, \"employment_income\": {2025: 35_000}}},\n    \"benunits\": {\"benunit\": {\"members\": [\"person\"]}},\n    \"households\": {\"household\": {\"members\": [\"person\"]}}\n}\n\nsim = Simulation(situation=situation, scenario=phased_scenario)\n\n# Show how the tax burden decreases year by year\nfor year in [2025, 2026, 2027, 2028]:\n    allowance = sim.calculate(\"income_tax_personal_allowance\", year).mean()\n    tax = sim.calculate(\"income_tax\", year).mean()\n    print(f\"{year}: Personal allowance £{allowance:.0f}, annual tax £{tax:.2f}\")","position":{"start":{"line":258,"column":1},"end":{"line":284,"column":1}},"key":"rQxFX9wEbF"},{"type":"heading","depth":3,"position":{"start":{"line":286,"column":1},"end":{"line":286,"column":1}},"children":[{"type":"text","value":"Creating complex scenarios with simulation modifiers","position":{"start":{"line":286,"column":1},"end":{"line":286,"column":1}},"key":"fdKTGPmnah"}],"identifier":"creating-complex-scenarios-with-simulation-modifiers","label":"Creating complex scenarios with simulation modifiers","html_id":"creating-complex-scenarios-with-simulation-modifiers","implicit":true,"key":"M8YiP1JFmJ"},{"type":"paragraph","position":{"start":{"line":288,"column":1},"end":{"line":288,"column":1}},"children":[{"type":"text","value":"Some policy changes require modifying individual records rather than just changing parameters. Here’s how to build a scenario that phases out PIP payments for some claimants over time:","position":{"start":{"line":288,"column":1},"end":{"line":288,"column":1}},"key":"dczs9hCjQi"}],"key":"rD9NaRBS5g"},{"type":"code","lang":"python","value":"import numpy as np\nfrom policyengine_uk import Scenario, Simulation\n\ndef phase_out_pip_gradually(sim: Simulation):\n    \"\"\"Gradually phase out PIP for a proportion of claimants between 2025-2029\"\"\"\n    # Set random seed for reproducible results\n    np.random.seed(42)\n    \n    # Create random assignment for each person\n    pip_phase_out_seed = np.random.random(len(sim.calculate(\"person_id\")))\n    \n    # Define the phase-out period\n    start_year = 2025\n    end_year = 2029\n    \n    # Apply phase-out year by year\n    for year in range(start_year, end_year + 1):\n        # Get current PIP payments\n        current_pip = sim.calculate(\"pip\", year)\n        \n        # Calculate how far through the phase-out we are\n        phase_progress = (year - start_year) / (end_year - start_year)\n        \n        # 25% of claimants lose PIP, gradually over the period\n        # In year 1, nobody loses it; by final year, 25% have lost it completely\n        affected_threshold = 0.25 * phase_progress\n        \n        # Set PIP to zero for affected claimants\n        current_pip[pip_phase_out_seed < affected_threshold] = 0\n        \n        # Apply the modified values back to the simulation\n        sim.set_input(\"pip\", year, current_pip)\n    \n    return sim\n\n# Create the scenario\npip_phase_out = Scenario(simulation_modifier=phase_out_pip_gradually)\n\n# Test on someone who receives PIP\npip_recipient = {\n    \"people\": {\n        \"person\": {\n            \"age\": {2025: 45},\n            \"pip\": {2025: 150},  # Weekly PIP payment\n            \"employment_income\": {2025: 8_000}\n        }\n    },\n    \"benunits\": {\"benunit\": {\"members\": [\"person\"]}},\n    \"households\": {\"household\": {\"members\": [\"person\"]}}\n}\n\n# Compare baseline and phase-out scenarios\nbaseline_sim = Simulation(situation=pip_recipient)\nreformed_sim = Simulation(situation=pip_recipient, scenario=pip_phase_out)\n\n# Show how PIP changes over the phase-out period\nfor year in [2025, 2027, 2029]:\n    baseline_pip = baseline_sim.calculate(\"pip\", year).mean()\n    reformed_pip = reformed_sim.calculate(\"pip\", year).mean()\n    print(f\"{year}: Baseline £{baseline_pip:.0f}/week, with phase-out £{reformed_pip:.0f}/week\")","position":{"start":{"line":290,"column":1},"end":{"line":351,"column":1}},"key":"cUzq2UVSLp"},{"type":"heading","depth":3,"position":{"start":{"line":353,"column":1},"end":{"line":353,"column":1}},"children":[{"type":"text","value":"Building Universal Credit scenarios with dynamic changes","position":{"start":{"line":353,"column":1},"end":{"line":353,"column":1}},"key":"GhrIRPI9vr"}],"identifier":"building-universal-credit-scenarios-with-dynamic-changes","label":"Building Universal Credit scenarios with dynamic changes","html_id":"building-universal-credit-scenarios-with-dynamic-changes","implicit":true,"key":"PQTUEj77aA"},{"type":"paragraph","position":{"start":{"line":355,"column":1},"end":{"line":355,"column":1}},"children":[{"type":"text","value":"Some scenarios need to make changes that depend on the simulation’s own data. Here’s how to create a UC scenario that adjusts payments based on claimant characteristics:","position":{"start":{"line":355,"column":1},"end":{"line":355,"column":1}},"key":"EcIYojzdQr"}],"key":"gTqu8LJiiS"},{"type":"code","lang":"python","value":"from policyengine_uk import Scenario, Microsimulation\nimport numpy as np\n\ndef modify_uc_for_new_claimants(sim: Microsimulation):\n    \"\"\"Reduce health elements for new UC claimants while increasing standard allowances\"\"\"\n    # Access the parameter system to check if reforms are active\n    rebalancing_params = sim.tax_benefit_system.parameters.gov.dwp.universal_credit.rebalancing\n    \n    # Create random assignment to simulate new vs existing claimants\n    np.random.seed(42)\n    uc_seed = np.random.random(len(sim.calculate(\"benunit_id\")))\n    \n    # Proportion of claimants who are \"new\" each year (based on real data)\n    new_claimant_rates = {\n        2025: 0.00,  # No change in 2025\n        2026: 0.11,  # 11% are new claimants\n        2027: 0.13,\n        2028: 0.16,\n        2029: 0.22\n    }\n    \n    # Apply changes year by year\n    for year in range(2026, 2030):\n        if not rebalancing_params.active(year):\n            continue  # Skip if reforms aren't active this year\n            \n        # Identify new claimants\n        is_new_claimant = uc_seed < new_claimant_rates[year]\n        \n        # Modify health element for new claimants\n        current_health_element = sim.calculate(\"uc_LCWRA_element\", year)\n        new_health_amount = rebalancing_params.new_claimant_health_element(year) * 12\n        \n        # Set new amount for new claimants who get health element\n        current_health_element[\n            (current_health_element > 0) & is_new_claimant\n        ] = new_health_amount\n        \n        sim.set_input(\"uc_LCWRA_element\", year, current_health_element)\n        \n        # Increase standard allowances for everyone\n        uplift_rate = rebalancing_params.standard_allowance_uplift(year)\n        previous_allowance = sim.calculate(\"uc_standard_allowance\", year - 1)\n        new_allowance = previous_allowance * (1 + uplift_rate)\n        sim.set_input(\"uc_standard_allowance\", year, new_allowance)\n\n# Create the UC rebalancing scenario\nuc_rebalancing = Scenario(simulation_modifier=modify_uc_for_new_claimants)\n\n# This scenario needs the rebalancing parameters to be active\nuc_rebalancing_active = Scenario(parameter_changes={\n    \"gov.dwp.universal_credit.rebalancing.active\": True\n}) + uc_rebalancing\n\n# Test on a typical UC claimant\nuc_claimant = {\n    \"people\": {\n        \"person\": {\n            \"age\": {2026: 35},\n            \"employment_income\": {2026: 8_000},\n            \"uc_LCWRA_element\": {2026: 390}  # Monthly health element\n        }\n    },\n    \"benunits\": {\"benunit\": {\"members\": [\"person\"]}},\n    \"households\": {\n        \"home\": {\n            \"members\": [\"person\"],\n            \"housing_costs\": {2026: 7200}\n        }\n    }\n}\n\nbaseline_sim = Simulation(situation=uc_claimant)\nreformed_sim = Simulation(situation=uc_claimant, scenario=uc_rebalancing_active)\n\n# Compare UC components\nfor year in [2026, 2028]:\n    baseline_uc = baseline_sim.calculate(\"universal_credit\", year).mean()\n    reformed_uc = reformed_sim.calculate(\"universal_credit\", year).mean()\n    print(f\"{year}: Baseline UC £{baseline_uc:.0f}/month, reformed £{reformed_uc:.0f}/month\")","position":{"start":{"line":357,"column":1},"end":{"line":438,"column":1}},"key":"vV0X4ywcSx"},{"type":"heading","depth":2,"position":{"start":{"line":440,"column":1},"end":{"line":440,"column":1}},"children":[{"type":"text","value":"Analysing scenarios at population level","position":{"start":{"line":440,"column":1},"end":{"line":440,"column":1}},"key":"DmnpQ7xQ9s"}],"identifier":"analysing-scenarios-at-population-level","label":"Analysing scenarios at population level","html_id":"analysing-scenarios-at-population-level","implicit":true,"key":"NcvnWwlwKR"},{"type":"paragraph","position":{"start":{"line":442,"column":1},"end":{"line":442,"column":1}},"children":[{"type":"text","value":"Use microsimulation to understand the broader impact of your scenarios:","position":{"start":{"line":442,"column":1},"end":{"line":442,"column":1}},"key":"vbor7TotWc"}],"key":"tejVMWgXu3"},{"type":"code","lang":"python","value":"from policyengine_uk import Microsimulation\n\n# Create a major scenario package combining tax cuts and benefit increases\n# This represents a significant fiscal intervention\nmajor_scenario = Scenario(parameter_changes={\n    \"gov.hmrc.income_tax.rates.uk[0].rate\": 0.15,          # Cut basic rate from 20% to 15%\n    \"gov.hmrc.income_tax.personal_allowance\": 16_000,       # Raise allowance significantly\n    \"gov.dwp.universal_credit.standard_allowance.single.OVER_25\": 600,  # Increase UC by £100/month\n    \"gov.dwp.universal_credit.means_test.reduction_rate\": 0.45  # Reduce taper from 55% to 45%\n})\n\n# Compare baseline and reform\nbaseline = Microsimulation(\n    dataset=\"hf://policyengine/policyengine-uk-data/enhanced_frs_2022_23.h5\"\n)\nreformed = Microsimulation(\n    dataset=\"hf://policyengine/policyengine-uk-data/enhanced_frs_2022_23.h5\",\n    scenario=major_scenario\n)\n\n# Calculate the fiscal impact of this major intervention\n# Tax cuts reduce revenue, benefit increases raise spending\nbaseline_revenue = baseline.calculate(\"income_tax\", 2025).sum() / 1e9\nreformed_revenue = reformed.calculate(\"income_tax\", 2025).sum() / 1e9\ntax_cost = baseline_revenue - reformed_revenue\n\nbaseline_uc = baseline.calculate(\"universal_credit\", 2025).sum() / 1e9\nreformed_uc = reformed.calculate(\"universal_credit\", 2025).sum() / 1e9\nuc_cost = reformed_uc - baseline_uc\n\ntotal_cost = tax_cost + uc_cost\n\nprint(f\"Income tax revenue loss: £{tax_cost:.1f}bn\")\nprint(f\"UC spending increase: £{uc_cost:.1f}bn\")\nprint(f\"Total fiscal cost: £{total_cost:.1f}bn\")\n\n# Calculate distributional impact\nbaseline_poverty = baseline.calculate(\"in_poverty\", 2025).mean()\nreformed_poverty = reformed.calculate(\"in_poverty\", 2025).mean()\npoverty_reduction = baseline_poverty - reformed_poverty\n\nprint(f\"Poverty rate reduction: {poverty_reduction:.1%}\")","position":{"start":{"line":444,"column":1},"end":{"line":487,"column":1}},"key":"w1CAdvhSEf"},{"type":"heading","depth":2,"position":{"start":{"line":489,"column":1},"end":{"line":489,"column":1}},"children":[{"type":"text","value":"Testing scenarios step by step","position":{"start":{"line":489,"column":1},"end":{"line":489,"column":1}},"key":"plCtuF72QW"}],"identifier":"testing-scenarios-step-by-step","label":"Testing scenarios step by step","html_id":"testing-scenarios-step-by-step","implicit":true,"key":"ir1rvhgrtx"},{"type":"paragraph","position":{"start":{"line":491,"column":1},"end":{"line":491,"column":1}},"children":[{"type":"text","value":"When building complex scenarios, test each component separately:","position":{"start":{"line":491,"column":1},"end":{"line":491,"column":1}},"key":"wT1yTUPJ7N"}],"key":"qYfp7bzDfi"},{"type":"code","lang":"python","value":"# Build up a complex scenario incrementally to understand each component's impact\n# Starting with an empty scenario as our baseline\nbase_scenario = Scenario(parameter_changes={})\n\n# Add income tax changes\nwith_tax_changes = base_scenario + Scenario(parameter_changes={\n    \"gov.hmrc.income_tax.rates.uk[0].rate\": 0.18,\n    \"gov.hmrc.income_tax.personal_allowance\": 14_000\n})\n\n# Add UC changes\nwith_uc_changes = with_tax_changes + Scenario(parameter_changes={\n    \"gov.dwp.universal_credit.standard_allowance.single.OVER_25\": 500,\n    \"gov.dwp.universal_credit.means_test.reduction_rate\": 0.50\n})\n\n# Add child benefit changes\nfull_scenario = with_uc_changes + Scenario(parameter_changes={\n    \"gov.hmrc.child_benefit.rates.first_child\": 25,\n    \"gov.hmrc.child_benefit.rates.additional_child\": 18\n})\n\n# Test the impact of each addition\ntest_situation = {\n    \"people\": {\n        \"parent\": {\"age\": {2025: 30}, \"employment_income\": {2025: 25_000}},\n        \"child\": {\"age\": {2025: 6}}\n    },\n    \"benunits\": {\"family\": {\"members\": [\"parent\", \"child\"]}},\n    \"households\": {\"home\": {\"members\": [\"parent\", \"child\"], \"housing_costs\": {2025: 8400}}}  # Annual housing costs\n}\n\n# Test each incremental addition to see cumulative effects\nscenarios = [(\"Baseline\", base_scenario), (\"With tax changes\", with_tax_changes),\n             (\"With UC changes\", with_uc_changes), (\"Full package\", full_scenario)]\n\nfor name, scenario in scenarios:\n    sim = Simulation(situation=test_situation, scenario=scenario)\n    net_income = sim.calculate(\"household_net_income\", 2025).mean()\n    print(f\"{name}: £{net_income/12:.2f} per month\")","position":{"start":{"line":493,"column":1},"end":{"line":534,"column":1}},"key":"uUy1NOjQMd"},{"type":"heading","depth":2,"position":{"start":{"line":536,"column":1},"end":{"line":536,"column":1}},"children":[{"type":"text","value":"Practical tips for scenario design","position":{"start":{"line":536,"column":1},"end":{"line":536,"column":1}},"key":"f0iEr3Z5qm"}],"identifier":"practical-tips-for-scenario-design","label":"Practical tips for scenario design","html_id":"practical-tips-for-scenario-design","implicit":true,"key":"XRNwYjLT9E"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":538,"column":1},"end":{"line":544,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":538,"column":1},"end":{"line":538,"column":1}},"children":[{"type":"text","value":"Start simple and build complexity gradually","position":{"start":{"line":538,"column":1},"end":{"line":538,"column":1}},"key":"izspX8PwcC"}],"key":"EIML7r84Io"},{"type":"listItem","spread":true,"position":{"start":{"line":539,"column":1},"end":{"line":539,"column":1}},"children":[{"type":"text","value":"Test scenarios on multiple household types to understand different impacts","position":{"start":{"line":539,"column":1},"end":{"line":539,"column":1}},"key":"DjWnLU0v23"}],"key":"B0QZx7zDC5"},{"type":"listItem","spread":true,"position":{"start":{"line":540,"column":1},"end":{"line":540,"column":1}},"children":[{"type":"text","value":"Use meaningful parameter names and document your choices","position":{"start":{"line":540,"column":1},"end":{"line":540,"column":1}},"key":"guDofb86Zn"}],"key":"OUDDFbj6bz"},{"type":"listItem","spread":true,"position":{"start":{"line":541,"column":1},"end":{"line":541,"column":1}},"children":[{"type":"text","value":"Combine related changes logically (tax reforms with tax reforms, benefit changes with benefit changes)","position":{"start":{"line":541,"column":1},"end":{"line":541,"column":1}},"key":"RhPqiV9yqd"}],"key":"WiFuf18gTy"},{"type":"listItem","spread":true,"position":{"start":{"line":542,"column":1},"end":{"line":542,"column":1}},"children":[{"type":"text","value":"Always check the fiscal impact of major reforms","position":{"start":{"line":542,"column":1},"end":{"line":542,"column":1}},"key":"b4i0IJs5ey"}],"key":"Afv2oiTRtW"},{"type":"listItem","spread":true,"position":{"start":{"line":543,"column":1},"end":{"line":544,"column":1}},"children":[{"type":"text","value":"Consider unintended interactions between different policy areas","position":{"start":{"line":543,"column":1},"end":{"line":543,"column":1}},"key":"brzo7ruJTH"}],"key":"sYWRtUBQM1"}],"key":"Z6UbKn9lHU"},{"type":"paragraph","position":{"start":{"line":545,"column":1},"end":{"line":545,"column":1}},"children":[{"type":"text","value":"These techniques let you model complex policy changes that go beyond simple parameter adjustments. Simulation modifiers give you complete control over how the tax-benefit system works, allowing you to implement everything from gradual phase-outs to dynamic eligibility changes. The key is to understand the underlying data structures and use them thoughtfully to represent real policy proposals.","position":{"start":{"line":545,"column":1},"end":{"line":545,"column":1}},"key":"WJvOc1SQCM"}],"key":"TMhR70Ej9O"}],"key":"jrPIGmtZ4E"}],"key":"Xvczvn9TN8"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Running simulations","url":"/simulations","group":"Usage"},"next":{"title":"Economic assumptions","url":"/growthfactors","group":"Assumptions"}}},"domain":"http://localhost:3000"}