{"version":2,"kind":"Article","sha256":"0cfc7b2ff6c2a6c41c4bdb734b072fe661d33a1702b969a2e6ead00f950037dc","slug":"simulations","location":"/usage/simulations.md","dependencies":[],"frontmatter":{"title":"Running simulations","content_includes_title":false,"authors":[{"nameParsed":{"literal":"PolicyEngine","family":"PolicyEngine"},"name":"PolicyEngine","id":"contributors-myst-generated-uid-0"}],"github":"https://github.com/policyengine/policyengine-uk","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/policyengine/policyengine-uk/blob/master/docs/book/usage/simulations.md","exports":[{"format":"md","filename":"simulations.md","url":"/build/simulations-d6422501f0c99dedbc30a0b32edfccec.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"glzUjVFQ4s"},{"type":"inlineCode","value":"Simulation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"f5AYgCGqqI"},{"type":"text","value":" class is the heart of PolicyEngine UK - it calculates tax and benefit outcomes for people and households. This guide walks you through everything from basic calculations to advanced microsimulation analysis.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"a5EUTEs92v"}],"key":"eGHtpML2Td"},{"type":"heading","depth":2,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Creating your first simulation","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bJcHB7ZxiR"}],"identifier":"creating-your-first-simulation","label":"Creating your first simulation","html_id":"creating-your-first-simulation","implicit":true,"key":"Adfxhij57p"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Every simulation starts with a situation that describes the people, benefit units, and households you want to analyse:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"hJtUNRYv6X"}],"key":"lDD3QfL6zb"},{"type":"code","lang":"python","value":"from policyengine_uk import Simulation\n\nsituation = {\n    \"people\": {\n        \"person_1\": {\n            \"age\": {2025: 30},\n            \"employment_income\": {2025: 30_000}\n        }\n    },\n    \"benunits\": {\n        \"benunit_1\": {\n            \"members\": [\"person_1\"]\n        }\n    },\n    \"households\": {\n        \"household_1\": {\n            \"members\": [\"person_1\"]\n        }\n    }\n}\n\nsim = Simulation(situation=situation)\nincome_tax = sim.calculate(\"income_tax\", 2025)\nprint(f\"Income tax: £{income_tax[0]:.2f}\")","position":{"start":{"line":9,"column":1},"end":{"line":34,"column":1}},"key":"xgRWpXt5ym"},{"type":"paragraph","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"This creates a simulation for one person and calculates their annual income tax liability. The result shows they would pay £3,486 per year in income tax.","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"ADa9IrBmu3"}],"key":"lBbA5DF7xj"},{"type":"heading","depth":2,"position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"Understanding the situation structure","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"bt52gIwygU"}],"identifier":"understanding-the-situation-structure","label":"Understanding the situation structure","html_id":"understanding-the-situation-structure","implicit":true,"key":"BxvG7ATS4y"},{"type":"paragraph","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"The situation dictionary has three main sections:","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"sXLPmsImsy"}],"key":"EKlAKnJEHB"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"strong","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"People","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"ImKQUxqR26"}],"key":"F28GNwEnhV"},{"type":"text","value":" define individuals with their characteristics:","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"cfk8DsYOkw"}],"key":"B6UQI8hLtf"},{"type":"code","lang":"python","value":"\"people\": {\n    \"sarah\": {\n        \"age\": {2025: 28},\n        \"employment_income\": {2025: 35_000},\n        \"pension_contributions\": {2025: 2_800}\n    },\n    \"tom\": {\n        \"age\": {2025: 32},\n        \"self_employment_income\": {2025: 18_000}\n    }\n}","position":{"start":{"line":43,"column":1},"end":{"line":55,"column":1}},"key":"RN5Nq074go"},{"type":"paragraph","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"children":[{"type":"strong","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"children":[{"type":"text","value":"Benefit units","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"ENfuFLPDT1"}],"key":"AxwVZ6U1ql"},{"type":"text","value":" group people for benefit calculations (typically families):","position":{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},"key":"AJcso0VZzl"}],"key":"NNdUhNVQcZ"},{"type":"code","lang":"python","value":"\"benunits\": {\n    \"family\": {\n        \"members\": [\"sarah\", \"tom\"]\n    }\n}","position":{"start":{"line":58,"column":1},"end":{"line":64,"column":1}},"key":"aDlwaHrfoc"},{"type":"paragraph","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"strong","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"text","value":"Households","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"key":"KjXZ45LnRd"}],"key":"iKjCJ9k2HD"},{"type":"text","value":" group people who live together:","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"key":"BQdzkJBozS"}],"key":"vSWgOoWsl5"},{"type":"code","lang":"python","value":"\"households\": {\n    \"home\": {\n        \"members\": [\"sarah\", \"tom\"],\n        \"housing_costs\": {2025: 11400},  # Annual rent\n        \"council_tax\": {2025: 1_800}   # Annual\n    }\n}","position":{"start":{"line":67,"column":1},"end":{"line":75,"column":1}},"key":"iQjIOXc5WX"},{"type":"heading","depth":2,"position":{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},"children":[{"type":"text","value":"Calculating different variables","position":{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},"key":"tJoxkEUGz6"}],"identifier":"calculating-different-variables","label":"Calculating different variables","html_id":"calculating-different-variables","implicit":true,"key":"Mp1EtCLP0t"},{"type":"paragraph","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"children":[{"type":"text","value":"PolicyEngine UK can calculate hundreds of variables. Here are some common ones:","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"key":"FVJ8ttz6Wq"}],"key":"wEGAOOvp6x"},{"type":"code","lang":"python","value":"# Taxes\nincome_tax = sim.calculate(\"income_tax\", 2025)\nnational_insurance = sim.calculate(\"national_insurance\", 2025)\ncouncil_tax = sim.calculate(\"council_tax\", 2025)\n\n# Benefits\nuniversal_credit = sim.calculate(\"universal_credit\", 2025)\nchild_benefit = sim.calculate(\"child_benefit\", 2025)\nstate_pension = sim.calculate(\"state_pension\", 2025)\n\n# Summary measures\nnet_income = sim.calculate(\"household_net_income\", 2025)\nin_poverty = sim.calculate(\"in_poverty\", 2025)\nmarginal_tax_rate = sim.calculate(\"marginal_tax_rate\", 2025)","position":{"start":{"line":81,"column":1},"end":{"line":96,"column":1}},"key":"GxW44PctEp"},{"type":"paragraph","position":{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},"children":[{"type":"text","value":"These calculations return arrays because simulations can handle multiple people, benefit units or households simultaneously. Each variable gives you results at the appropriate level - income tax is calculated per person, Universal Credit per benefit unit, and council tax per household.","position":{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},"key":"ATUs0Y1TF4"}],"key":"K1o6NA0TAj"},{"type":"heading","depth":2,"position":{"start":{"line":100,"column":1},"end":{"line":100,"column":1}},"children":[{"type":"text","value":"Simulating policy scenarios","position":{"start":{"line":100,"column":1},"end":{"line":100,"column":1}},"key":"h46MwGo7Zy"}],"identifier":"simulating-policy-scenarios","label":"Simulating policy scenarios","html_id":"simulating-policy-scenarios","implicit":true,"key":"tAiYSjsAiX"},{"type":"paragraph","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"children":[{"type":"text","value":"To test policy changes, create a scenario and apply it to your simulation. This example shows what happens when we increase Universal Credit’s standard allowance for single people over 25 from the current rate to £500 per month:","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"key":"oWzj1NzzR1"}],"key":"wTXkooOZKz"},{"type":"code","lang":"python","value":"from policyengine_uk import Scenario\n\n# Create a scenario that increases UC standard allowance\nscenario = Scenario(parameter_changes={\n    \"gov.dwp.universal_credit.standard_allowance.single.OVER_25\": 500\n})\n\n# Apply the scenario to create a new simulation\nreformed_sim = Simulation(situation=situation, scenario=scenario)\n\n# Compare the average UC payment between baseline and scenario\nbaseline_uc = sim.calculate(\"universal_credit\", 2025).mean()\nreformed_uc = reformed_sim.calculate(\"universal_credit\", 2025).mean()\n\n# Calculate the difference to see the policy impact\ndifference = reformed_uc - baseline_uc\nprint(f\"Average UC increase: £{difference:.2f} per month\")","position":{"start":{"line":104,"column":1},"end":{"line":122,"column":1}},"key":"dO5XpJrPIL"},{"type":"heading","depth":2,"position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"children":[{"type":"text","value":"Working with families and children","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"key":"gU6IJvkUTF"}],"identifier":"working-with-families-and-children","label":"Working with families and children","html_id":"working-with-families-and-children","implicit":true,"key":"FaDjVvKUKk"},{"type":"paragraph","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"children":[{"type":"text","value":"Family situations require more detailed setup:","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"key":"yvFX58vFty"}],"key":"qkA1NJ4gG7"},{"type":"code","lang":"python","value":"family_with_children = {\n    \"people\": {\n        \"parent\": {\n            \"age\": {2025: 35},\n            \"employment_income\": {2025: 28_000}\n        },\n        \"partner\": {\n            \"age\": {2025: 33},\n            \"employment_income\": {2025: 12_000}\n        },\n        \"child_1\": {\n            \"age\": {2025: 7}\n        },\n        \"child_2\": {\n            \"age\": {2025: 4}\n        }\n    },\n    \"benunits\": {\n        \"family\": {\n            \"members\": [\"parent\", \"partner\", \"child_1\", \"child_2\"]\n        }\n    },\n    \"households\": {\n        \"home\": {\n            \"members\": [\"parent\", \"partner\", \"child_1\", \"child_2\"],\n            \"housing_costs\": {2025: 9600},  # Annual housing costs\n            \"childcare_costs\": {2025: 7200}  # Annual childcare costs\n        }\n    }\n}\n\nfamily_sim = Simulation(situation=family_with_children)\n\n# Calculate family-specific benefits - these are per benefit unit (family)\nchild_benefit = family_sim.calculate(\"child_benefit\", 2025).mean()\nchildcare_support = family_sim.calculate(\"universal_credit_childcare\", 2025).mean()\n\nprint(f\"Child benefit: £{child_benefit:.2f} per month\")\nprint(f\"Childcare support: £{childcare_support:.2f} per month\")","position":{"start":{"line":128,"column":1},"end":{"line":168,"column":1}},"key":"O0SzYgBq8X"},{"type":"heading","depth":2,"position":{"start":{"line":170,"column":1},"end":{"line":170,"column":1}},"children":[{"type":"text","value":"Using different data sources","position":{"start":{"line":170,"column":1},"end":{"line":170,"column":1}},"key":"lbpnj9m12b"}],"identifier":"using-different-data-sources","label":"Using different data sources","html_id":"using-different-data-sources","implicit":true,"key":"bBo0iuIaXD"},{"type":"heading","depth":3,"position":{"start":{"line":172,"column":1},"end":{"line":172,"column":1}},"children":[{"type":"text","value":"From pandas DataFrames","position":{"start":{"line":172,"column":1},"end":{"line":172,"column":1}},"key":"DU1TOffR6I"}],"identifier":"from-pandas-dataframes","label":"From pandas DataFrames","html_id":"from-pandas-dataframes","implicit":true,"key":"QHHYeOum9l"},{"type":"paragraph","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"children":[{"type":"text","value":"If you have data in a DataFrame, convert it to the right format:","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"vAbBv0Hfef"}],"key":"q5RqrhA2to"},{"type":"code","lang":"python","value":"import pandas as pd\n\n# Your data needs specific column naming\ndf = pd.DataFrame({\n    \"person_id__2025\": [1, 2, 3],\n    \"age__2025\": [25, 45, 65],\n    \"employment_income__2025\": [20000, 40000, 0],\n    \"state_pension__2025\": [0, 0, 180]  # Weekly pension\n})\n\n# Create simulation from the DataFrame\nsim_from_df = Simulation(dataset=df)\n# Calculate total income tax across all people in the dataset\ntotal_tax = sim_from_df.calculate(\"income_tax\", 2025).sum()\nprint(f\"Total income tax from all people: £{total_tax:.2f}\")","position":{"start":{"line":176,"column":1},"end":{"line":192,"column":1}},"key":"Ns4gwu0AfQ"},{"type":"paragraph","position":{"start":{"line":194,"column":1},"end":{"line":194,"column":1}},"children":[{"type":"text","value":"The column naming follows the pattern ","position":{"start":{"line":194,"column":1},"end":{"line":194,"column":1}},"key":"iCJC3nYoie"},{"type":"inlineCode","value":"variable_name__year","position":{"start":{"line":194,"column":1},"end":{"line":194,"column":1}},"key":"tvQucoGJjm"},{"type":"text","value":" for time-varying variables.","position":{"start":{"line":194,"column":1},"end":{"line":194,"column":1}},"key":"MuxuQWoJCo"}],"key":"DRxkoMkMbm"},{"type":"heading","depth":3,"position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"children":[{"type":"text","value":"From survey datasets","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"tCzq9EW9jA"}],"identifier":"from-survey-datasets","label":"From survey datasets","html_id":"from-survey-datasets","implicit":true,"key":"OUtoIGXb8T"},{"type":"paragraph","position":{"start":{"line":198,"column":1},"end":{"line":198,"column":1}},"children":[{"type":"text","value":"For population-level analysis, use survey data:","position":{"start":{"line":198,"column":1},"end":{"line":198,"column":1}},"key":"k8wTKFAxyc"}],"key":"porL7AzF41"},{"type":"code","lang":"python","value":"from policyengine_uk import Microsimulation\n\n# Load the Enhanced Family Resources Survey\nsim = Microsimulation(\n    dataset=\"hf://policyengine/policyengine-uk-data/enhanced_frs_2022_23.h5\"\n)\n\n# Calculate population totals using survey weights\n# This gives us an estimate for the entire UK population\ntotal_income_tax = sim.calculate(\"income_tax\", 2025).sum() / 1e9\nprint(f\"Total UK income tax revenue: £{total_income_tax:.1f}bn\")","position":{"start":{"line":200,"column":1},"end":{"line":212,"column":1}},"key":"OPOieYwSO7"},{"type":"heading","depth":2,"position":{"start":{"line":214,"column":1},"end":{"line":214,"column":1}},"children":[{"type":"text","value":"Microsimulation analysis","position":{"start":{"line":214,"column":1},"end":{"line":214,"column":1}},"key":"lxlvhGpTzt"}],"identifier":"microsimulation-analysis","label":"Microsimulation analysis","html_id":"microsimulation-analysis","implicit":true,"key":"iZEjBBCSsY"},{"type":"paragraph","position":{"start":{"line":216,"column":1},"end":{"line":216,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":216,"column":1},"end":{"line":216,"column":1}},"key":"sj4aWN6ZCb"},{"type":"inlineCode","value":"Microsimulation","position":{"start":{"line":216,"column":1},"end":{"line":216,"column":1}},"key":"UAjCt4A3b9"},{"type":"text","value":" class extends ","position":{"start":{"line":216,"column":1},"end":{"line":216,"column":1}},"key":"MTVaOZRXoQ"},{"type":"inlineCode","value":"Simulation","position":{"start":{"line":216,"column":1},"end":{"line":216,"column":1}},"key":"DDhjL8Q3DH"},{"type":"text","value":" with survey weights for population estimates:","position":{"start":{"line":216,"column":1},"end":{"line":216,"column":1}},"key":"tIPbGuKAlR"}],"key":"YQgi4jCJvV"},{"type":"code","lang":"python","value":"from policyengine_uk import Microsimulation\n\n# Compare baseline and reform\nbaseline = Microsimulation(\n    dataset=\"hf://policyengine/policyengine-uk-data/enhanced_frs_2022_23.h5\"\n)\n\n# Create a scenario that increases the basic rate of income tax to 25%\nscenario = Scenario(parameter_changes={\n    \"gov.hmrc.income_tax.rates.uk[0].rate\": 0.25\n})\nreformed = Microsimulation(\n    dataset=\"hf://policyengine/policyengine-uk-data/enhanced_frs_2022_23.h5\",\n    scenario=scenario\n)\n\n# Calculate revenue impact by comparing household net incomes\n# When net income falls, government revenue increases\nbaseline_net = baseline.calculate(\"household_net_income\", 2025)\nreformed_net = reformed.calculate(\"household_net_income\", 2025)\n\n# The negative of the income change gives us the revenue change\nrevenue_change = -(reformed_net - baseline_net).sum() / 1e9\nprint(f\"Additional government revenue: £{revenue_change:.1f}bn\")\n\n# Analyse distributional impact by looking at poverty rates\n# in_poverty is a boolean variable, so mean() gives us the poverty rate\npoverty_baseline = baseline.calculate(\"in_poverty\", 2025).mean()\npoverty_reformed = reformed.calculate(\"in_poverty\", 2025).mean()\n\npoverty_change = poverty_reformed - poverty_baseline\nprint(f\"Poverty rate change: {poverty_change:.1%}\")","position":{"start":{"line":218,"column":1},"end":{"line":251,"column":1}},"key":"LKSTa9iIpg"},{"type":"heading","depth":2,"position":{"start":{"line":253,"column":1},"end":{"line":253,"column":1}},"children":[{"type":"text","value":"Advanced techniques","position":{"start":{"line":253,"column":1},"end":{"line":253,"column":1}},"key":"ZZp0VpzhCH"}],"identifier":"advanced-techniques","label":"Advanced techniques","html_id":"advanced-techniques","implicit":true,"key":"A7h5Az3dD9"},{"type":"heading","depth":3,"position":{"start":{"line":255,"column":1},"end":{"line":255,"column":1}},"children":[{"type":"text","value":"Calculating multiple variables efficiently","position":{"start":{"line":255,"column":1},"end":{"line":255,"column":1}},"key":"YmsaeSJL3Y"}],"identifier":"calculating-multiple-variables-efficiently","label":"Calculating multiple variables efficiently","html_id":"calculating-multiple-variables-efficiently","implicit":true,"key":"Tg1L4OsSk0"},{"type":"paragraph","position":{"start":{"line":257,"column":1},"end":{"line":257,"column":1}},"children":[{"type":"text","value":"Instead of calculating variables one by one, you can get multiple results at once using the built-in ","position":{"start":{"line":257,"column":1},"end":{"line":257,"column":1}},"key":"TD54EFFtqf"},{"type":"inlineCode","value":"calculate_dataframe","position":{"start":{"line":257,"column":1},"end":{"line":257,"column":1}},"key":"UjRURoOWiU"},{"type":"text","value":" method:","position":{"start":{"line":257,"column":1},"end":{"line":257,"column":1}},"key":"UKPsh2OJPE"}],"key":"NaNPWDw238"},{"type":"code","lang":"python","value":"# Get multiple variables in a single DataFrame\nvariables = [\"employment_income\", \"income_tax\", \"universal_credit\", \"household_net_income\"]\nresults_df = sim.calculate_dataframe(variables, 2025)\n\n# This gives you a DataFrame with columns for each variable\nprint(results_df.head())\nprint(f\"Average net income: £{results_df['household_net_income'].mean():.2f}\")","position":{"start":{"line":259,"column":1},"end":{"line":267,"column":1}},"key":"xj1CJbnws5"},{"type":"heading","depth":3,"position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"children":[{"type":"text","value":"Working with different time periods","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"DyCOqtOMr5"}],"identifier":"working-with-different-time-periods","label":"Working with different time periods","html_id":"working-with-different-time-periods","implicit":true,"key":"GfMbTixjI4"},{"type":"code","lang":"python","value":"# Multi-year analysis to see how income changes over time\nyears = [2023, 2024, 2025]\nincome_by_year = {}\n\nfor year in years:\n    income_by_year[year] = sim.calculate(\"household_net_income\", year)\n\n# Compare average household income across years\nfor year in years:\n    avg_income = income_by_year[year].mean()\n    print(f\"{year}: £{avg_income/12:.2f} per month\")","position":{"start":{"line":271,"column":1},"end":{"line":283,"column":1}},"key":"UFUciXRWkz"},{"type":"heading","depth":3,"position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"children":[{"type":"text","value":"Mapping variables to different entities","position":{"start":{"line":285,"column":1},"end":{"line":285,"column":1}},"key":"rfoeA6s8Po"}],"identifier":"mapping-variables-to-different-entities","label":"Mapping variables to different entities","html_id":"mapping-variables-to-different-entities","implicit":true,"key":"pONw53kesU"},{"type":"paragraph","position":{"start":{"line":287,"column":1},"end":{"line":287,"column":1}},"children":[{"type":"text","value":"Some variables can be calculated at different levels:","position":{"start":{"line":287,"column":1},"end":{"line":287,"column":1}},"key":"z1LhYi6JuY"}],"key":"SkYHFvjh2c"},{"type":"code","lang":"python","value":"# Calculate employment income at different entity levels\n# Individual level - one value per person\nperson_income = sim.calculate(\"employment_income\", 2025)\nprint(f\"Average personal employment income: £{person_income.mean():.2f}\")\n\n# Household level - sums all employment income within each household\nhousehold_income = sim.calculate(\"employment_income\", 2025, map_to=\"household\")\nprint(f\"Average household employment income: £{household_income.mean():.2f}\")\n\n# Benefit unit level - sums employment income within each benefit unit (family)\nbenunit_income = sim.calculate(\"employment_income\", 2025, map_to=\"benunit\")\nprint(f\"Average benefit unit employment income: £{benunit_income.mean():.2f}\")","position":{"start":{"line":289,"column":1},"end":{"line":302,"column":1}},"key":"ZJ5KmI3Qk8"},{"type":"heading","depth":3,"position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"children":[{"type":"text","value":"Using custom weights","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"PA8WU2yxY2"}],"identifier":"using-custom-weights","label":"Using custom weights","html_id":"using-custom-weights","implicit":true,"key":"cl8ZAJdYC5"},{"type":"paragraph","position":{"start":{"line":306,"column":1},"end":{"line":306,"column":1}},"children":[{"type":"text","value":"For microsimulation with custom weights:","position":{"start":{"line":306,"column":1},"end":{"line":306,"column":1}},"key":"LLhx4r3MJ1"}],"key":"vJpPpQI6PA"},{"type":"code","lang":"python","value":"# Access and modify survey weights for sensitivity analysis\nweights = sim.get_weights(\"income_tax\", 2025)\nmodified_weights = weights * 1.1  # Increase all weights by 10%\n\n# Calculate population total with modified weights\nunweighted_values = sim.calculate(\"income_tax\", 2025, use_weights=False)\nweighted_total = (unweighted_values * modified_weights).sum()\nprint(f\"Total with 10% higher weights: £{weighted_total/1e9:.1f}bn\")","position":{"start":{"line":308,"column":1},"end":{"line":317,"column":1}},"key":"fj5F8ijS9v"},{"type":"heading","depth":2,"position":{"start":{"line":319,"column":1},"end":{"line":319,"column":1}},"children":[{"type":"text","value":"Debugging simulations","position":{"start":{"line":319,"column":1},"end":{"line":319,"column":1}},"key":"JmfJxl9XLv"}],"identifier":"debugging-simulations","label":"Debugging simulations","html_id":"debugging-simulations","implicit":true,"key":"YOpQoUlPBT"},{"type":"paragraph","position":{"start":{"line":321,"column":1},"end":{"line":321,"column":1}},"children":[{"type":"text","value":"When simulations don’t behave as expected:","position":{"start":{"line":321,"column":1},"end":{"line":321,"column":1}},"key":"r5pfuqzVCa"}],"key":"OkuYBnhFPg"},{"type":"code","lang":"python","value":"# Check individual components to understand the tax calculation\n# These help you trace through how income tax is calculated step by step\nemployment_income = sim.calculate(\"employment_income\", 2025).mean()\npersonal_allowance = sim.calculate(\"personal_allowance\", 2025).mean()\ntaxable_income = sim.calculate(\"adjusted_net_income\", 2025).mean()\nincome_tax = sim.calculate(\"income_tax\", 2025).mean()\n\nprint(f\"Employment income: £{employment_income:.2f}\")\nprint(f\"Personal allowance: £{personal_allowance:.2f}\")\nprint(f\"Taxable income: £{taxable_income:.2f}\")\nprint(f\"Income tax: £{income_tax:.2f}\")\n\n# Verify the household composition was interpreted correctly\navg_age = sim.calculate(\"age\", 2025).mean()\nchildren_per_household = sim.calculate(\"household_count_children\", 2025).mean()\nprint(f\"Average age: {avg_age:.1f} years\")\nprint(f\"Average children per household: {children_per_household:.1f}\")","position":{"start":{"line":323,"column":1},"end":{"line":341,"column":1}},"key":"wZgzAtR70R"},{"type":"heading","depth":2,"position":{"start":{"line":343,"column":1},"end":{"line":343,"column":1}},"children":[{"type":"text","value":"Performance tips","position":{"start":{"line":343,"column":1},"end":{"line":343,"column":1}},"key":"WtrYMKQMZQ"}],"identifier":"performance-tips","label":"Performance tips","html_id":"performance-tips","implicit":true,"key":"YV6DkYzym0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":345,"column":1},"end":{"line":349,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"children":[{"type":"text","value":"Use ","position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"key":"RroXZdFMXI"},{"type":"inlineCode","value":"Microsimulation","position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"key":"yOgGvg3Luo"},{"type":"text","value":" for population analysis, ","position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"key":"OfMP7p9swL"},{"type":"inlineCode","value":"Simulation","position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"key":"UOcwYjF8Z5"},{"type":"text","value":" for household-level work","position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"key":"AEa41VB3d7"}],"key":"XQZfQdNgby"},{"type":"listItem","spread":true,"position":{"start":{"line":346,"column":1},"end":{"line":346,"column":1}},"children":[{"type":"text","value":"Calculate multiple variables in batches rather than individually","position":{"start":{"line":346,"column":1},"end":{"line":346,"column":1}},"key":"lauR9gDHRU"}],"key":"jbfcgso7q0"},{"type":"listItem","spread":true,"position":{"start":{"line":347,"column":1},"end":{"line":347,"column":1}},"children":[{"type":"text","value":"For large datasets, consider calculating subsets first to verify your logic","position":{"start":{"line":347,"column":1},"end":{"line":347,"column":1}},"key":"aVdW99p4uX"}],"key":"PZDRjcU5ug"},{"type":"listItem","spread":true,"position":{"start":{"line":348,"column":1},"end":{"line":349,"column":1}},"children":[{"type":"text","value":"Cache simulation results when running the same calculation multiple times","position":{"start":{"line":348,"column":1},"end":{"line":348,"column":1}},"key":"sizgkfYH2E"}],"key":"pq4quLvniW"}],"key":"tJFoYwlhzT"},{"type":"paragraph","position":{"start":{"line":350,"column":1},"end":{"line":350,"column":1}},"children":[{"type":"text","value":"The simulation system is designed to be flexible and powerful. Start with simple examples and gradually build up to more complex analyses as you become familiar with the structure and capabilities.","position":{"start":{"line":350,"column":1},"end":{"line":350,"column":1}},"key":"fC9J46368Y"}],"key":"N2loJHjyE7"}],"key":"HODhHkm5uT"}],"key":"Vjd4TDyfB3"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Getting started","url":"/getting-started","group":"Usage"},"next":{"title":"Creating policy scenarios","url":"/scenarios","group":"Usage"}}},"domain":"http://localhost:3000"}